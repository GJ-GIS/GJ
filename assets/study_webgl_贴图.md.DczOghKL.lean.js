import{_ as i,c as a,ae as n,o as l}from"./chunks/framework.BSn6qPJ2.js";const e="/GJ/assets/7a283e5f96e5de5549110a80012a0626.image.8eVhIPm_.webp",c=JSON.parse('{"title":"贴图","description":"","frontmatter":{},"headers":[],"relativePath":"study/webgl/贴图.md","filePath":"study/webgl/贴图.md","lastUpdated":1731858933000}'),p={name:"study/webgl/贴图.md"};function h(t,s,k,r,d,g){return l(),a("div",null,s[0]||(s[0]=[n('<h1 id="贴图" tabindex="-1">贴图 <a class="header-anchor" href="#贴图" aria-label="Permalink to &quot;贴图&quot;">​</a></h1><h2 id="一-webgl中的坐标系" tabindex="-1">一. webgl中的坐标系 <a class="header-anchor" href="#一-webgl中的坐标系" aria-label="Permalink to &quot;一. webgl中的坐标系&quot;">​</a></h2><ol><li>webgl坐标系: 画布中心为(0,0); 向右为x轴正方向,取值[-1,1]; 向上为y轴正方向,取值[-1,1];</li><li>栅格(canvas, 图像)坐标系: 左上角为(0,0); 向右为x轴正方向,取值[0,画布宽度];向上为y轴正方向,取值[0,画布高度];</li></ol><p><img src="'+e+`" alt="image.png"></p><ol start="3"><li>uv坐标系: 左下角为(0,0); ; 向右为x轴正方向,取值[0,1];向上为y轴正方向,取值[0,1];</li></ol><h2 id="二-不同数据对应的坐标系" tabindex="-1">二. 不同数据对应的坐标系 <a class="header-anchor" href="#二-不同数据对应的坐标系" aria-label="Permalink to &quot;二. 不同数据对应的坐标系&quot;">​</a></h2><ol><li>顶点: 顶点使用的是webgl坐标系;</li><li>片元(gl_FragCoord): 坐标的单位是像素,使用的是栅格坐标系;</li><li>图像(image对象): 使用的是栅格坐标系;</li><li>图钉(拾取纹理): 使用的是uv坐标系;</li></ol><h2 id="三-贴图" tabindex="-1">三. 贴图 <a class="header-anchor" href="#三-贴图" aria-label="Permalink to &quot;三. 贴图&quot;">​</a></h2><p>获取第一个像素的颜色: 每一个顶点都会获取一个对应的图钉坐标</p><ol><li>当前像素使用gl_FragCoord表示.</li><li>使用texture(u_sampler,v_pin)获取当前像素的颜色.</li><li>u_sampler指的是image对象处理后获得的拾取器,使用的是栅格坐标系;</li><li>v_pin指的是图钉,使用uv坐标系.</li><li>获取(-1,-1)webgl坐标系位置的像素颜色, 通过图钉(在uv坐标系下)拿到图片在(-1,-1)顶点处的坐标系.</li></ol><p>:::note{title=&quot;注&quot;} 图钉除了和顶点数据一起传入着色器, 也可以通过gl_FragCoord进行计算, 一个像素点对应一个gl_FragCoord像素坐标, 也对应一个图钉坐标,一个图钉又对应了一个图片的像素颜色.</p><p>例如:</p><p>直角坐标系(全图)</p><div class="language-glsl vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">glsl</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">  vec2</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> pin </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> gl_FragCoord</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.xy</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">/</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">u_canvasSize;</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> // 直角坐标系(全图)</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><p>极坐标(全图)</p><div class="language-glsl vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">glsl</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">float</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> getAngle</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(vec2 </span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">v</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">){</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">  float</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> ang</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">atan</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(v.y,v.x);</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">  if</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(ang</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&lt;</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">0.</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">){</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    ang</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">+=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">pi2;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  }</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">  return</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> ang;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br></div></div><div class="language-glsl vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">glsl</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">  vec2</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> vcf</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">gl_FragCoord</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.xy</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">-</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">u_canvasSize</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">/</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">2.</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">  float</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> ang</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">getAngle</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(vcf);</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">  float</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> len</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">length</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(vcf);</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">  // xy是ang和len的归一化</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">  float</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> x</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">ang</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">/</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">pi2;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">  float</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> y</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">len</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">/</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">u_canvasSize.y;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">  vec2</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> pin </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> vec2</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(x, y);</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> // 极坐标(全图)</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br></div></div><p>:::</p>`,18)]))}const o=i(p,[["render",h]]);export{c as __pageData,o as default};
